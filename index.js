require('dotenv').config();
const fs = require('fs');
const { Client, GatewayIntentBits, MessageFlags } = require('discord.js');

let forbiddenWords = [];

try {
    const data = fs.readFileSync('forbidden.txt', 'utf-8');
    forbiddenWords = data.split(',').map(word => word.trim().replace(/\s/g, '').toLowerCase());
    console.log(forbiddenWords);
    console.log('—Å–ª–æ–≤–∞ –∑—á–∏—Ç–∞–Ω–æ');
} catch (error) {
    console.log('—Ç–∏ –¥–∞—É–Ω:', error);
}

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});

client.once('ready', () => {
    console.log(`‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ —è–∫ ${client.user.tag}`);
});

client.on('messageCreate', async message => {
    if (message.author.bot) return;

    if (forbiddenWords.some(word => message.content.toLowerCase().replace(/\s/g, '').trim().includes(word))) {
        message.delete();
        await message.author.send(`${message.author}, —Ç–≤—ñ–π –º–µ—Å–µ–¥–∂ –º—ñ—Å—Ç–∏—Ç—å –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ —Å–ª–æ–≤–æ!\nmessage: **${message.content}**\n–ë—É–¥—å —É–≤–∞–∂–Ω–∏–º –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–∑—É.`);
        return;
    }

    if (message.content.toLowerCase() === '–ø—Ä–∏–≤—ñ—Ç') {
        message.reply('–ü—Ä–∏–≤—ñ—Ç! üëã');
    }
});

client.login(process.env.TOKEN);
